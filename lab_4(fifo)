#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
   time_t  timeparent,timeson;
   int     fd;
   pid_t pid;
   ssize_t size;
   char    resstring[14];
   char    name[] = "fifo";

   if(mkfifo(name,0666) < 0 && errno != EEXIST){
     printf("Can't create FIFO\n");
     exit(-1);
   }


   switch(pid = fork()) 
   {
          case -1: 
                   printf("Cant fork childn");
                   exit(-1);
                   
          case 0:  time(&timeson);
                   printf("present time: %s\n",ctime(&timeson));
                   printf("child start");
                   if((fd = open(name, O_RDONLY)) < 0)
                   {
                     printf("Can't open FIFO for readingn");
	                 exit(-1);
                   }
                   size = read(fd, resstring, 14);
                   if(size < 0)
                   {
                     printf("Can't read string from FIFOn");
                     exit(-1);
                   }
                   printf("Child exit, resstring:%s\n", resstring);
                   close(fd);
         default:
                  printf("parent start");
                  if((fd = open(name, O_WRONLY)) < 0)
                   {
                     printf("Can't open FIFO for writtingn");
	                 exit(-1);
                   }

                   size = write(fd, "Hello, world!", 14);

                   if(size != 14)
                   {
                     printf("Can't write all string to FIFOn");
                     exit(-1);
                   }
                   close(fd);
                   printf("Parent exit\n"); 
              
   }
   return 0;
}
